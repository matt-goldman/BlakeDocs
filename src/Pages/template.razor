@using BlakePlugin.DocsRenderer.Components
@using BlakePlugin.DocsRenderer.Utils
@inject NavigationManager NavigationManager

<PageTitle>BlakeDocs - @Title</PageTitle>

<div class="container-fluid">
    <div class="row">
        <!-- Left Sidebar - Site Navigation -->
        <nav class="col-lg-2 col-md-3 bdr-sidebar bg-dark border-end">
            <div class="p-3">
                <h5 class="text-primary mb-3">Documentation</h5>

                <div class="nav flex-column">

                    @foreach (var node in contentIndex)
                    {
                        <h6 class="text-muted text-uppercase small fw-bold mt-4 mb-2">@node.Text</h6>
                        @foreach (var child in node.Children)
                        {
                            <a href="@child.Slug" class="nav-link bdr-nav-link @(activeSlug == child.Slug ? "active" : "")">
                                @child.Text
                            </a>
                        }
                    }
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="col-lg-8 col-md-6 bdr-content-area">
            <div class="p-4">
                <!-- Breadcrumb -->
                <nav aria-label="breadcrumb" class="mb-4">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#" class="text-decoration-none">Home</a></li>
                        <li class="breadcrumb-item"><a href="#" class="text-decoration-none">Getting Started</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Introduction</li>
                    </ol>
                </nav>

                <!-- Page Header -->
                <div class="mb-5">
                    <h1 class="display-5 fw-bold mb-3">@Title</h1>
                    <p class="lead text-muted">@Description</p>
                </div>

                <!-- Content Sections -->
                @Body
            </div>
            <footer class="border-top footer text-muted">
                <div class="container">
                    &copy; @DateTime.Now.Year - BlakeDocs
                </div>
            </footer>

        </main>

        <!-- Right Sidebar - Table of Contents -->
        <aside class="col-lg-2 col-md-3 bdr-toc bg-dark border-start">
            <div class="p-3">
                <h6 class="text-muted text-uppercase small fw-bold mb-3">On This Page</h6>
                <nav class="nav flex-column">

                    @foreach(var pageSecttion in _sections)
                    {
                        <a href="@($"#{pageSecttion.Id}")" class="bdr-toc-link @(activeSlug == $"/{pageSecttion.Id}" ? "active" : "")">
                            @pageSecttion.Text
                        </a>
                        @if (pageSecttion.Children != null && pageSecttion.Children.Count > 0)
                        {
                            <div class="ms-3">
                                @foreach (var child in pageSecttion.Children)
                                {
                                    <a href="#@child.Id" class="bdr-toc-link @(activeSlug == $"/{child.Id}" ? "active" : "")">
                                        @child.Text
                                    </a>
                                }
                            </div>
                        }
                    }
                </nav>

                <hr class="my-4">

                <div class="mb-3">
                    <h6 class="text-muted text-uppercase small fw-bold mb-2">Quick Links</h6>
                    <a href="#" class="bdr-toc-link">GitHub Repository</a>
                    <a href="#" class="bdr-toc-link">Report Issue</a>
                    <a href="#" class="bdr-toc-link">Contribute</a>
                    <a href="#" class="bdr-toc-link">Changelog</a>
                </div>
            </div>
        </aside>
    </div>
    </div>

@code {
    private List<TocNode> contentIndex = TocUtils.BuildSiteTocNodes(GeneratedContentIndex.GetPages());

    private string activeSlug = string.Empty;

    protected override void OnAfterRender(bool isFirstRender)
    {
        // Get the current page slug from the URL
        activeSlug = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        
        if (!activeSlug.StartsWith("/"))
        {
            activeSlug = "/" + activeSlug; // Ensure it starts with a slash
        }

        Console.WriteLine($"Active slug: {activeSlug}");

        base.OnAfterRender(isFirstRender);
    }
}