@using BlakePlugin.DocsRenderer.Components
@using BlakePlugin.DocsRenderer.Utils
@inject NavigationManager NavigationManager
@inject IJSRuntime js

<PageTitle>BlakeDocs - @Title</PageTitle>

<div class="container-fluid">
    <div class="row">
        <!-- Left Sidebar - Site Navigation -->
        <SiteToc ActiveSlug="@activeSlug" Nodes="@contentIndex" />

        <!-- Main Content -->
        <main class="col-lg-8 col-md-6">
            <div class="p-4 bdr-content-area">
                <!-- Breadcrumb -->
                <nav aria-label="breadcrumb" class="mb-4">
                    <ol class="breadcrumb">
                        @foreach (var segment in _slugSegments)
                        {
                            var isActive = segment == _slugSegments.Last();
                            var styleClass = isActive ? "breadcrumb-item active" : "breadcrumb-item";
                            var link = string.Join("/", _slugSegments.TakeWhile(s => s != segment).Append(segment));

                            @if (isActive)
                            {
                                <li class="@styleClass" aria-current="@segment">@segment</li>
                            }
                            else
                            {
                                <li class="@styleClass"><a href="@link" class="text-decoration-none">@segment</a></li>
                            }
                        }
                    </ol>
                </nav>

                <!-- Page Header -->
                <div class="mb-5">
                    <h1 class="display-5 fw-bold mb-3">@Title</h1>
                    <p class="lead text-muted">@Description</p>
                </div>

                <!-- Content Sections -->
                @Body
            </div>
            <footer class="border-top footer text-muted">
                <div class="container">
                    &copy; @DateTime.Now.Year - BlakeDocs
                </div>
            </footer>

        </main>

        <!-- Right Sidebar - Table of Contents -->
        <PageToc PageSections="@_sections" />
        
    </div>
</div>

@code {
    private List<TocNode> contentIndex = [];

    private string activeSlug = string.Empty;

    private List<string> _slugSegments = [];

    protected override void OnInitialized()
    {
        // Get the current page slug from the URL
        activeSlug = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        if (!activeSlug.StartsWith("/"))
        {
            activeSlug = "/" + activeSlug; // Ensure it starts with a slash
        }

        _slugSegments = activeSlug
            .Split('/')
            .ToList();

        contentIndex = TocUtils.BuildSiteTocNodes(GeneratedContentIndex.GetPages());

        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        await base.OnAfterRenderAsync(isFirstRender);

        await js.InvokeVoidAsync("initializeDocsPlugin");

    }
}