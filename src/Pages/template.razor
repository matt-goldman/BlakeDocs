@using BlakePlugin.DocsRenderer.Components
@using BlakePlugin.DocsRenderer.Utils

<PageTitle>BlakeDocs - @Title</PageTitle>

<div class="content-wrapper">
    <!-- Full screen site TOC in left sidebar -->
    <SiteToc Nodes=@contentIndex />

    <!-- Main content area -->
    <div class="main-content">
        <h1>@Title</h1>

        <!-- Mobile: Page table of contents (collapsible) -->
        <PageTocMobile PageSections="@_sections"/>

        <!-- Generated page content -->
        <div class="main-content">
            @Body

            <p>
                Last updated: @Published
            </p>

             <!-- Navigation buttons -->
             <!-- TODO: refactor - need to add logic for previous/next pages, and need to change from a and button to NavLink -->
            @* <div class="container mt-auto">
                <div class="d-flex justify-content-between mt-4">
                    @if (Model.PreviousPage != null)
                    {
                        <a asp-page="/Content/CourseContent" asp-route-pageId="@Model.PreviousPage" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> @Model.PreviousPageName</a>
                    }

                    @if (Model.NextPage != null)
                    {
                        <form id="nah" method="post"></form>
                        <button id="nextPageButton" onclick="GoToNext('@Model.ActiveChapter', '@Model.NextPage')" class="btn btn-secondary">
                            <span id="nextPageButtonSpinner" class="spinner-border spinner-border-sm" style="display:none;" aria-hidden="true"></span>
                            @Model.NextPageName <i class="fas fa-arrow-right"></i>
                        </button>
                    }
                </div>
            </div> *@
        </div>

        <!-- Full screen page TOC in right sidebar -->
        <PageToc PageSections="@_sections" />
    </div>
</div>

<!-- Off-canvas sidebar for mobile page TOC -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="globalTocOffcanvas" aria-labelledby="globalTocOffcanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="globalTocOffcanvasLabel">Site Contents</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <SiteTocMobile Nodes="@contentIndex" />
    </div>
</div>


@code {
    private List<TocNode> contentIndex = TocUtils.BuildSiteTocNodes(GeneratedContentIndex.GetPages());
}